# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.parameter import Parameter
from openapi_server import util

from openapi_server.models.parameter import Parameter  # noqa: E501

class View(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, view_id=None, filter_parameters=None):  # noqa: E501
        """View - a model defined in OpenAPI

        :param view_id: The view_id of this View.  # noqa: E501
        :type view_id: int
        :param filter_parameters: The filter_parameters of this View.  # noqa: E501
        :type filter_parameters: List[Parameter]
        """
        self.openapi_types = {
            'view_id': int,
            'filter_parameters': List[Parameter]
        }

        self.attribute_map = {
            'view_id': 'viewID',
            'filter_parameters': 'filterParameters'
        }

        self._view_id = view_id
        self._filter_parameters = filter_parameters

    @classmethod
    def from_dict(cls, dikt) -> 'View':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The View of this View.  # noqa: E501
        :rtype: View
        """
        return util.deserialize_model(dikt, cls)

    @property
    def view_id(self):
        """Gets the view_id of this View.


        :return: The view_id of this View.
        :rtype: int
        """
        return self._view_id

    @view_id.setter
    def view_id(self, view_id):
        """Sets the view_id of this View.


        :param view_id: The view_id of this View.
        :type view_id: int
        """

        self._view_id = view_id

    @property
    def filter_parameters(self):
        """Gets the filter_parameters of this View.

        The parameters used for filtering  # noqa: E501

        :return: The filter_parameters of this View.
        :rtype: List[Parameter]
        """
        return self._filter_parameters

    @filter_parameters.setter
    def filter_parameters(self, filter_parameters):
        """Sets the filter_parameters of this View.

        The parameters used for filtering  # noqa: E501

        :param filter_parameters: The filter_parameters of this View.
        :type filter_parameters: List[Parameter]
        """

        self._filter_parameters = filter_parameters
